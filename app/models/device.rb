class Device < ActiveRecord::Base
  # extends ...................................................................
  # includes ..................................................................
  include ConversionRatio
  # security (i.e. attr_accessible) ...........................................
  # relationships .............................................................
  has_many :orders, :primary_key => "device_id"
  has_one :device_info
  # validations ...............................................................
  # callbacks .................................................................
  # scopes ....................................................................
  scope :between, ->(d1, d2) {
    where(:created_at => Date.parse(d1)...Date.parse(d2).tomorrow)
  }
  scope :by_channel_name, ->(channel) { where(channel_id: channel) }
  # Sum how many orders for a channel.
  # example: Device.order_count_by_channel(channel)
  scope :order_count_by_channel, ->(channel) { by_channel_name(channel).joins(:orders).count("orders.id") }
  scope :by_application, ->(application) {joins(:device_info).where('device_infos.application_id = ?', application)}
  # additional config .........................................................
  # class methods .............................................................
  # public instance methods ...................................................
  def self.chart_data(ratio_settings = [])
    result = []
    select("`devices`.`created_at`, COUNT(`devices`.`id`) as total_num").group("DATE_FORMAT(`devices`.`created_at`,'%Y-%m-%d')").each do |row|
      ratio = get_ratio(ratio_settings, row.created_at)
      result << {
        day: row.created_at.strftime('%Y-%m-%d'),
        count: (row.total_num * ratio).round
      }
    end
    result
  end
  # protected instance methods ................................................
  # private instance methods ..................................................
end
